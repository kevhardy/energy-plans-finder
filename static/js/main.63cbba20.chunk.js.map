{"version":3,"sources":["components/FormContext.jsx","components/ZipcodeForm.jsx","components/Home.jsx","components/hooks/reducer.jsx","components/Plan/modules/PlanDetailsCell.jsx","components/Plan/modules/PricingCell.jsx","components/DetailsAccordion.jsx","components/Plan/modules/CompanyCell.jsx","components/Plan/modules/KwhPriceCell.jsx","components/Plan/Plan.jsx","components/PlansTableHeader.jsx","components/PlansTable.jsx","components/hooks/useWindowWidth.jsx","components/Results.jsx","components/App.jsx","index.jsx"],"names":["FormContext","createContext","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","zipcode","setZipcode","_useContext","useContext","state","handleZipSubmit","handleSubmit","e","preventDefault","test","history","push","concat","useEffect","location","pathname","initialZipcode","queryString","parse","search","isLoading","react_default","a","createElement","className","Form","onSubmit","Field","name","Input","value","icon","onChange","target","maxLength","autoComplete","focus","placeholder","loading","Icon","link","onClick","Home","Divider","hidden","Header","as","components_ZipcodeForm","initialState","plans","filteredPlans","comparePlans","reducer","action","type","objectSpread","slice","toConsumableArray","planID","filter","id","column","sort","x","y","price_kwh500","price_kwh1000","price_kwh2000","companyA","company_name","toLowerCase","companyB","reverse","getReducer","useReducer","React","memo","contractLength","planType","renewablePercent","Table","Cell","singleLine","List","Item","length","details","eflURL","termsURL","cancelFee","lastIndexOf","href","rel","DetailsAccordion","active","setActive","isChecked","_props$plan","plan","planName","plan_name","pricing_details","renewable_energy_description","term_value","rate_type","fact_sheet","terms_of_service","handleAccordionClick","titleProps","moreDetailsTable","columns","unstackable","Row","HeaderCell","width","Body","modules_PlanDetailsCell","modules_PricingCell","positive","colSpan","style","padding","paddingTop","Accordion","Title","index","fontSize","textAlign","marginBottom","Content","AnimateHeight_default","animateOpacity","duration","height","logo","rating","backgroundImage","alt","margin","Popup","trigger","marginLeft","content","position","Rating","defaultRating","maxRating","size","disabled","sortedState","price","priceLevel","direction","negative","toFixed","Plan","setIsChecked","dispatch","plan_id","company_logo","rating_total","_props$plan2","mainPlan","modules_CompanyCell","Fragment","modules_KwhPriceCell","collapsing","Checkbox","checked","data","handleSort","sorted","PlansTable","setSortState","window","innerWidth","setWidth","handleResize","useCallback","addEventListener","removeEventListener","useWindowWidth","plansOutput","map","Plan_Plan","key","sortable","components_PlansTableHeader","clickedColumn","Loader","inline","Results","goHome","PlansTable_PlansTable","fetchPlans","_callee2","ajax","regenerator_default","wrap","_context2","prev","next","fetch","method","headers","Content-Type","body","JSON","stringify","parameters","zip_code","sent","json","abrupt","t0","console","error","stop","ReactDOM","render","_getReducer","_getReducer2","_ref","asyncToGenerator","mark","_callee","newPlans","_context","log","_x2","apply","this","arguments","react_router_dom","basename","process","Provider","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.63cbba20.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const FormContext = createContext({});\r\n","import queryString from 'query-string';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Icon, Input } from 'semantic-ui-react';\r\nimport '../styles/ZipcodeForm.css';\r\nimport { FormContext } from './FormContext';\r\n\r\nfunction ZipcodeForm(props) {\r\n  const [zipcode, setZipcode] = useState('');\r\n  const { state, handleZipSubmit } = useContext(FormContext);\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === '/app/results') {\r\n      const { zipcode: initialZipcode } = queryString.parse(\r\n        props.location.search\r\n      );\r\n\r\n      if (initialZipcode && /^[0-9]{5}$/.test(initialZipcode)) {\r\n        setZipcode(initialZipcode);\r\n        if (!state.isLoading) handleZipSubmit(initialZipcode);\r\n      } else {\r\n        // Invalid query string\r\n        setZipcode('');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  function handleInputChange(e) {\r\n    const regex = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || regex.test(e.target.value)) {\r\n      setZipcode(e.target.value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Verify 5 input is a 5 digit zipcode\r\n    if (/^[0-9]{5}$/.test(zipcode)) {\r\n      props.history.push(`/app/results?zipcode=${zipcode}`);\r\n      handleZipSubmit(zipcode);\r\n    } else {\r\n      // TODO: Display invalid zipcode error\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-zipform\">\r\n      <Form onSubmit={handleSubmit} className=\"zipform\">\r\n        <Form.Field name=\"zipcode\">\r\n          <Input\r\n            name=\"zipcode\"\r\n            value={zipcode}\r\n            icon\r\n            onChange={handleInputChange}\r\n            maxLength=\"5\"\r\n            autoComplete=\"off\"\r\n            focus\r\n            placeholder=\"Enter ZIP Code\"\r\n            loading={state.isLoading}\r\n          >\r\n            <input />\r\n            <Icon name=\"search\" link onClick={handleSubmit} />\r\n          </Input>\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ZipcodeForm);\r\n","import React from 'react';\r\nimport { Divider, Header } from 'semantic-ui-react';\r\nimport '../styles/Home.css';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home-main\">\r\n      <Divider hidden />\r\n\r\n      <Header className=\"header-main\" as=\"h1\">\r\n        TX Energy Plans\r\n      </Header>\r\n\r\n      <p className=\"header-info\">\r\n        View and compare plans offered in your area. Get started by entering in\r\n        your <strong>ZIP code</strong> down below.\r\n      </p>\r\n\r\n      <Divider hidden />\r\n      <ZipcodeForm />\r\n    </div>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\n\r\nconst initialState = {\r\n  plans: [],\r\n  filteredPlans: [],\r\n  comparePlans: [],\r\n  isLoading: false\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'update':\r\n      return {\r\n        ...state,\r\n        plans: action.plans,\r\n        filteredPlans: action.plans.slice()\r\n      };\r\n\r\n    case 'loading':\r\n      return { ...state, isLoading: !state.isLoading };\r\n\r\n    case 'addCompare':\r\n      return { ...state, comparePlans: [...state.comparePlans, action.planID] };\r\n\r\n    case 'removeCompare':\r\n      return {\r\n        ...state,\r\n        comparePlans: state.comparePlans.filter(id => id !== action.planID)\r\n      };\r\n\r\n    case 'sort':\r\n      switch (action.column) {\r\n        case '500':\r\n          return {\r\n            ...state,\r\n            filteredPlans: state.filteredPlans\r\n              .slice()\r\n              .sort((x, y) => x.price_kwh500 - y.price_kwh500)\r\n          };\r\n\r\n        case '1000':\r\n          return {\r\n            ...state,\r\n            filteredPlans: state.filteredPlans\r\n              .slice()\r\n              .sort((x, y) => x.price_kwh1000 - y.price_kwh1000)\r\n          };\r\n\r\n        case '2000':\r\n          return {\r\n            ...state,\r\n            filteredPlans: state.filteredPlans\r\n              .slice()\r\n              .sort((x, y) => x.price_kwh2000 - y.price_kwh2000)\r\n          };\r\n\r\n        case 'company':\r\n          return {\r\n            ...state,\r\n            filteredPlans: state.filteredPlans.slice().sort((x, y) => {\r\n              const companyA = x.company_name.toLowerCase();\r\n              const companyB = y.company_name.toLowerCase();\r\n              if (companyA < companyB) return -1;\r\n              if (companyA > companyB) return 1;\r\n              return 0;\r\n            })\r\n          };\r\n\r\n        case 'reverse':\r\n          return {\r\n            ...state,\r\n            filteredPlans: state.filteredPlans.slice().reverse()\r\n          };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getReducer = () => {\r\n  return useReducer(reducer, initialState);\r\n};\r\n","import React from 'react';\r\nimport { List, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function PlanDetailsCell(props) {\r\n  const { name, contractLength, planType, renewablePercent } = props;\r\n\r\n  return (\r\n    <Table.Cell className=\"details-cell\" singleLine>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Plan Name</List.Header>\r\n          {name.length < 26 ? name : name.slice(0, 25) + '...'}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Contract Length</List.Header>\r\n          {contractLength ? contractLength + ' month' : 'None'}\r\n          {contractLength > 1 ? 's' : ''}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Plan Type</List.Header>\r\n          {planType} Rate\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Renewable Energy</List.Header>\r\n          {renewablePercent}\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Divider, List, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function PricingCell(props) {\r\n  const { details, eflURL, termsURL } = props;\r\n\r\n  /*TODO: parse details more efficiently\r\n  Currently very hacky when details is a per month cancellation fee or $0.00 */\r\n  const cancelFee = details.slice(details.lastIndexOf('$') + 1, details.length);\r\n\r\n  return (\r\n    <Table.Cell>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Cancellation Fee</List.Header>\r\n          {cancelFee !== '0.00' ? '$' + cancelFee : 'None'}\r\n        </List.Item>\r\n        <Divider hidden />\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={eflURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Facts Sheet (EFL)\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={termsURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Terms of Service\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Accordion, Icon, Table } from 'semantic-ui-react';\r\nimport PlanDetailsCell from './Plan/modules/PlanDetailsCell';\r\nimport PricingCell from './Plan/modules/PricingCell';\r\n\r\nexport default function DetailsAccordion(props) {\r\n  const [active, setActive] = useState(0);\r\n  const { isChecked } = props;\r\n\r\n  const {\r\n    plan_name: planName,\r\n    pricing_details: details,\r\n    renewable_energy_description: renewablePercent,\r\n    term_value: contractLength,\r\n    rate_type: planType,\r\n    fact_sheet: eflURL,\r\n    terms_of_service: termsURL\r\n  } = props.plan;\r\n\r\n  // Toggles accordion state\r\n  function handleAccordionClick(e, titleProps) {\r\n    const toggleActive = active === 1 ? 0 : 1;\r\n    setActive(toggleActive);\r\n  }\r\n\r\n  // Table of details that goes inside accordion\r\n  const moreDetailsTable = (\r\n    <Table className=\"details-table\" columns={2} unstackable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell width={1}>Plan Details</Table.HeaderCell>\r\n          <Table.HeaderCell width={1}>Pricing</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <PlanDetailsCell\r\n            name={planName}\r\n            renewablePercent={renewablePercent}\r\n            planType={planType}\r\n            contractLength={contractLength}\r\n          />\r\n          <PricingCell details={details} eflURL={eflURL} termsURL={termsURL} />\r\n        </Table.Row>\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n\r\n  return (\r\n    <Table.Row positive={isChecked}>\r\n      <Table.Cell\r\n        colSpan=\"12\"\r\n        className=\"accordion-row\"\r\n        style={{ padding: '0', paddingTop: '0' }}\r\n      >\r\n        <Accordion className=\"accordion-cursor\">\r\n          <Accordion.Title\r\n            className={'plan-dropdown' + (active === 1 ? ' hidden' : '')}\r\n            active={active !== 1}\r\n            index={0}\r\n            onClick={handleAccordionClick}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: '.8rem',\r\n                textAlign: 'center',\r\n                marginBottom: '2px'\r\n              }}\r\n            >\r\n              More Details\r\n            </p>\r\n            <Icon className=\"dropdown-icon\" name=\"dropdown\" />\r\n          </Accordion.Title>\r\n          <Accordion.Content active={active === 1}>\r\n            <AnimateHeight\r\n              animateOpacity\r\n              duration={300}\r\n              height={active ? 'auto' : 0}\r\n            >\r\n              {moreDetailsTable}\r\n              <div\r\n                className=\"plan-dropup accordion-cursor\"\r\n                onClick={handleAccordionClick}\r\n              >\r\n                <Icon\r\n                  className=\"dropup-icon\"\r\n                  name=\"dropdown\"\r\n                  onClick={handleAccordionClick}\r\n                />\r\n              </div>\r\n            </AnimateHeight>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Icon, Popup, Rating, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function CompanyCell(props) {\r\n  const { logo, rating } = props;\r\n\r\n  return (\r\n    <Table.Cell className=\"company-cell\">\r\n      <div\r\n        style={{ backgroundImage: 'url(' + logo + ')' }}\r\n        className=\"company-logo\"\r\n        alt=\"Company's logo\"\r\n      />\r\n      <div style={{ margin: '1rem 0 0' }}>\r\n        Rating{' '}\r\n        <Popup\r\n          trigger={\r\n            <Icon\r\n              style={{ marginLeft: '.85rem' }}\r\n              name=\"question circle outline\"\r\n            />\r\n          }\r\n          content=\"The Company Rating is based on the ratio of customer complaints a company has received in the past 6 months compared to other companies. The more stars a company has, the lower the complaint ratio.\"\r\n          position=\"right center\"\r\n        />\r\n      </div>\r\n\r\n      {!rating || rating === -1 ? (\r\n        <p style={{ fontSize: '.75rem' }}>\r\n          <strong>Not Available</strong>\r\n        </p>\r\n      ) : (\r\n        <Rating\r\n          icon=\"star\"\r\n          defaultRating={rating}\r\n          maxRating={5}\r\n          size=\"tiny\"\r\n          disabled\r\n        />\r\n      )}\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Header, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function KwhPriceCell(props) {\r\n  const { sortedState, price, priceLevel } = props;\r\n\r\n  return (\r\n    <Table.Cell\r\n      positive={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'ascending'\r\n      }\r\n      negative={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'descending'\r\n      }\r\n    >\r\n      <Header as=\"h4\" textAlign=\"center\">\r\n        {price.toFixed(1)}¢\r\n      </Header>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React, { useContext, useState } from 'react';\r\nimport { Checkbox, Table } from 'semantic-ui-react';\r\nimport '../../styles/Plan.css';\r\nimport DetailsAccordion from '../DetailsAccordion';\r\nimport { FormContext } from '../FormContext';\r\nimport CompanyCell from './modules/CompanyCell';\r\nimport KwhPriceCell from './modules/KwhPriceCell';\r\nimport PlanDetailsCell from './modules/PlanDetailsCell';\r\nimport PricingCell from './modules/PricingCell';\r\n\r\nexport default function Plan(props) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const { dispatch } = useContext(FormContext);\r\n\r\n  // Which column and how it's sorted\r\n  const { sortedState, width } = props;\r\n\r\n  // Details of plan for main content\r\n  const {\r\n    plan_id,\r\n    company_logo,\r\n    rating_total,\r\n    price_kwh500,\r\n    price_kwh1000,\r\n    price_kwh2000\r\n  } = props.plan;\r\n\r\n  // Details for accordion\r\n  const {\r\n    plan_name: planName,\r\n    pricing_details: details,\r\n    renewable_energy_description: renewablePercent,\r\n    term_value: contractLength,\r\n    rate_type: planType,\r\n    fact_sheet: eflURL,\r\n    terms_of_service: termsURL\r\n  } = props.plan;\r\n\r\n  // Either adds or removes comparison click\r\n  // very slow, needs optimizing\r\n  function handleCompareClick(e, data) {\r\n    e.preventDefault();\r\n    if (data.checked) {\r\n      setIsChecked(true);\r\n      dispatch({ type: 'addCompare', planID: plan_id });\r\n    } else {\r\n      setIsChecked(false);\r\n      dispatch({ type: 'removeCompare', planID: plan_id });\r\n    }\r\n  }\r\n\r\n  // JSX for displaying main content of Plan\r\n  const mainPlan = (\r\n    <Table.Row positive={isChecked}>\r\n      <CompanyCell logo={company_logo} rating={rating_total} />\r\n\r\n      {width >= 768 && (\r\n        <React.Fragment>\r\n          <PlanDetailsCell\r\n            name={planName}\r\n            renewablePercent={renewablePercent}\r\n            planType={planType}\r\n            contractLength={contractLength}\r\n          />\r\n          <PricingCell details={details} eflURL={eflURL} termsURL={termsURL} />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <KwhPriceCell\r\n        price={price_kwh500}\r\n        priceLevel={'500'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh1000}\r\n        priceLevel={'1000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh2000}\r\n        priceLevel={'2000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <Table.Cell className=\"checkbox-cell\" textAlign=\"right\" collapsing>\r\n        <Checkbox\r\n          name=\"isChecked\"\r\n          checked={isChecked}\r\n          onChange={handleCompareClick}\r\n        />\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {mainPlan}\r\n      {width < 768 && (\r\n        <DetailsAccordion plan={props.plan} isChecked={isChecked} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function PlansTableHeader(props) {\r\n  const { isLoading, sortedState, handleSort, width } = props;\r\n\r\n  return (\r\n    <Table.Header>\r\n      <Table.Row disabled={isLoading}>\r\n        <Table.HeaderCell\r\n          sorted={\r\n            sortedState.column === 'company' ? sortedState.direction : null\r\n          }\r\n          onClick={() => handleSort('company')}\r\n          textAlign=\"left\"\r\n        >\r\n          Company\r\n        </Table.HeaderCell>\r\n\r\n        {width >= 768 && (\r\n          <React.Fragment>\r\n            <Table.HeaderCell className=\"details-header\" textAlign=\"center\">\r\n              Plan Details\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell className=\"pricing-header\" textAlign=\"center\">\r\n              Pricing\r\n            </Table.HeaderCell>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '500' ? sortedState.direction : null}\r\n          onClick={() => handleSort('500')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          500 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '1000' ? sortedState.direction : null}\r\n          onClick={() => handleSort('1000')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          1000 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '2000' ? sortedState.direction : null}\r\n          onClick={() => handleSort('2000')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          2000 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell className=\"checkbox-header\" />\r\n      </Table.Row>\r\n    </Table.Header>\r\n  );\r\n});\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Loader, Table } from 'semantic-ui-react';\r\nimport '../styles/PlansTable.css';\r\nimport { FormContext } from './FormContext';\r\nimport useWindowWidth from './hooks/useWindowWidth';\r\nimport Plan from './Plan/Plan';\r\nimport PlansTableHeader from './PlansTableHeader';\r\n\r\nexport default function PlansTable() {\r\n  const { state, dispatch } = useContext(FormContext);\r\n  const { plans, filteredPlans, isLoading } = state;\r\n  const [sortedState, setSortState] = useState({\r\n    column: null,\r\n    direction: null\r\n  });\r\n  const width = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      setSortState({\r\n        column: null,\r\n        direction: null\r\n      });\r\n    }\r\n  });\r\n\r\n  function handleSort(clickedColumn) {\r\n    // First time column is clicked, sort ascending\r\n    if (sortedState.column !== clickedColumn) {\r\n      setSortState({\r\n        column: clickedColumn,\r\n        direction: 'ascending'\r\n      });\r\n      dispatch({ type: 'sort', column: clickedColumn });\r\n      return;\r\n    }\r\n\r\n    // If column is clicked again, reverses order\r\n    setSortState({\r\n      column: sortedState.column,\r\n      direction:\r\n        sortedState.direction === 'ascending' ? 'descending' : 'ascending'\r\n    });\r\n    dispatch({ type: 'sort', column: 'reverse' });\r\n  }\r\n\r\n  const plansOutput = filteredPlans.slice(0, 19).map(plan => {\r\n    return (\r\n      <Plan\r\n        key={plan.plan_id}\r\n        plan={plan}\r\n        sortedState={sortedState}\r\n        width={width}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Table className=\"plan-table\" sortable unstackable>\r\n      <PlansTableHeader\r\n        sortedState={sortedState}\r\n        isLoading={isLoading}\r\n        handleSort={handleSort}\r\n        width={width}\r\n      />\r\n      <Table.Body>\r\n        {isLoading ? (\r\n          <Table.Row>\r\n            <Table.Cell colSpan=\"12\">\r\n              <Loader active={isLoading} inline=\"centered\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        ) : plans.length ? (\r\n          plansOutput\r\n        ) : (\r\n          <Table.Row>\r\n            <Table.Cell colSpan=\"12\">No results found.</Table.Cell>\r\n          </Table.Row>\r\n        )}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function useWindowWidth() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const handleResize = useCallback(() => {\r\n    setWidth(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return width;\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { Divider, Header, Icon } from 'semantic-ui-react';\r\nimport '../styles/Results.css';\r\nimport PlansTable from './PlansTable';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Results(props) {\r\n  const goHome = useCallback(() => {\r\n    props.history.push('/');\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Divider hidden />\r\n      <div className=\"container-header\">\r\n        <div className=\"header-home\">\r\n          <Icon name=\"home\" size=\"large\" link onClick={goHome} />\r\n        </div>\r\n        <Header className=\"header-results\" as=\"h1\">\r\n          TX Energy Plans\r\n        </Header>\r\n        <div className=\"header-spacer\" />\r\n      </div>\r\n\r\n      <ZipcodeForm />\r\n\r\n      <PlansTable />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport '../styles/App.css';\nimport { FormContext } from './FormContext';\nimport Home from './Home';\nimport { getReducer } from './hooks/reducer';\nimport Results from './Results';\n\nasync function fetchPlans(zipcode) {\n  try {\n    const ajax = await fetch(\n      `https://cors-anywhere.herokuapp.com/http://www.powertochoose.org/en-us/service/v1/`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          parameters: {\n            method: 'plans',\n            zip_code: zipcode\n          }\n        })\n      }\n    );\n    let data = await ajax.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport default function App() {\n  const [state, dispatch] = getReducer();\n\n  const handleZipSubmit = useCallback(async zipcode => {\n    dispatch({ type: 'loading' });\n    const newPlans = await fetchPlans(zipcode);\n    if (newPlans) {\n      await dispatch({ type: 'update', plans: newPlans });\n    }\n    console.log(newPlans);\n    await dispatch({ type: 'loading' });\n  }, []);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <FormContext.Provider\n        value={{\n          state,\n          dispatch,\n          handleZipSubmit\n        }}\n      >\n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/app/results\" component={Results} />\n        </main>\n      </FormContext.Provider>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}