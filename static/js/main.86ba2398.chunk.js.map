{"version":3,"sources":["components/FormContext.jsx","components/ZipcodeForm.jsx","components/Home.jsx","components/Plan/modules/CompanyCell.jsx","components/Plan/modules/KwhPriceCell.jsx","components/Plan/modules/PlanDetailsCell.jsx","components/Plan/modules/PricingCell.jsx","components/Plan/Plan.jsx","components/PlanViewer.jsx","components/Results.jsx","index.jsx","components/App.jsx"],"names":["FormContext","createContext","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","zipcode","setZipcode","_useContext","useContext","isLoading","handleZipSubmit","handleSubmit","e","preventDefault","history","push","concat","useEffect","location","pathname","initialZipcode","queryString","parse","search","react_default","a","createElement","className","Form","onSubmit","Field","name","Input","value","icon","onChange","target","test","maxLength","autoComplete","focus","placeholder","loading","Icon","link","onClick","Home","Divider","hidden","Header","as","components_ZipcodeForm","CompanyCell","logo","rating","Table","Cell","style","backgroundImage","alt","margin","Popup","trigger","marginLeft","content","position","Rating","defaultRating","maxRating","size","disabled","fontSize","KwhPriceCell","sortedState","price","priceLevel","positive","column","direction","negative","textAlign","toFixed","PlanDetailsCell","contractLength","planType","renewablePercent","List","Item","PricingCell","details","eflURL","termsURL","cancelFee","slice","indexOf","length","href","rel","Plan","active","setActive","_useState3","_useState4","isChecked","setIsChecked","compareList","setCompareList","_props$plan","plan","plan_id","plan_name","company_logo","rating_total","price_kwh500","price_kwh1000","price_kwh2000","pricing_details","renewable_energy_description","term_value","rate_type","fact_sheet","terms_of_service","handleAccordionClick","titleProps","mainPlan","Row","collapsing","Checkbox","data","checked","toConsumableArray","filter","id","moreDetailsTable","unstackable","HeaderCell","Body","moreDetails","colSpan","padding","paddingTop","Accordion","Title","index","marginBottom","Content","AnimateHeight_default","animateOpacity","duration","height","Fragment","PlanViewer","plans","setPlans","setSortState","handleSort","clickedColumn","reverse","sort","x","y","plansOutput","map","Plan_Plan","key","sortable","sorted","Loader","inline","Results","PlanViewer_PlanViewer","ReactDOM","render","setIsLoading","_useState5","_useState6","_fetchPlans","asyncToGenerator","regenerator_default","mark","_callee","ajax","wrap","_context","prev","next","fetch","method","headers","Content-Type","body","JSON","stringify","parameters","zip_code","sent","json","console","dir","t0","log","stop","apply","this","arguments","react_router_dom","basename","process","Provider","_x","fetchPlans","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.86ba2398.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const FormContext = createContext({});\r\n","import queryString from 'query-string';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Icon, Input } from 'semantic-ui-react';\r\nimport '../styles/ZipcodeForm.css';\r\nimport { FormContext } from './FormContext';\r\n\r\nfunction ZipcodeForm(props) {\r\n  const [zipcode, setZipcode] = useState('');\r\n  const { isLoading, handleZipSubmit } = useContext(FormContext);\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === '/app/results') {\r\n      const { zipcode: initialZipcode } = queryString.parse(\r\n        props.location.search\r\n      );\r\n\r\n      if (initialZipcode) setZipcode(initialZipcode);\r\n      if (!isLoading) handleZipSubmit(initialZipcode);\r\n    }\r\n  }, []);\r\n\r\n  function handleInputChange(e) {\r\n    const regex = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || regex.test(e.target.value)) {\r\n      setZipcode(e.target.value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.history.push(`/app/results?zipcode=${zipcode}`);\r\n    handleZipSubmit(zipcode);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-zipform\">\r\n      <Form onSubmit={handleSubmit} className=\"zipform\">\r\n        <Form.Field name=\"zipcode\">\r\n          <Input\r\n            name=\"zipcode\"\r\n            value={zipcode}\r\n            icon\r\n            onChange={handleInputChange}\r\n            maxLength=\"5\"\r\n            autoComplete=\"off\"\r\n            focus\r\n            placeholder=\"Enter ZIP Code\"\r\n            loading={isLoading}\r\n          >\r\n            <input />\r\n            <Icon name=\"search\" link onClick={handleSubmit} />\r\n          </Input>\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ZipcodeForm);\r\n","import React from 'react';\r\nimport { Divider, Header } from 'semantic-ui-react';\r\nimport '../styles/Home.css';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home-main\">\r\n      <Divider hidden />\r\n\r\n      <Header className=\"header-main\" as=\"h1\">\r\n        TX Energy Plans\r\n      </Header>\r\n\r\n      <p className=\"header-info\">\r\n        View and compare plans offered in your area. Get started by entering in\r\n        your <strong>ZIP code</strong> down below.\r\n      </p>\r\n\r\n      <Divider hidden />\r\n      <ZipcodeForm />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Icon, Popup, Rating, Table } from 'semantic-ui-react';\r\n\r\nexport default function CompanyCell(props) {\r\n  const { logo, rating } = props;\r\n\r\n  return (\r\n    <Table.Cell className=\"company-cell\">\r\n      <div\r\n        style={{ backgroundImage: 'url(' + logo + ')' }}\r\n        className=\"company-logo\"\r\n        alt=\"Company's logo\"\r\n      />\r\n      <div style={{ margin: '1rem 0 0' }}>\r\n        Rating{' '}\r\n        <Popup\r\n          trigger={\r\n            <Icon\r\n              style={{ marginLeft: '.85rem' }}\r\n              name=\"question circle outline\"\r\n            />\r\n          }\r\n          content=\"The Company Rating is based on the ratio of customer complaints a company has received in the past 6 months compared to other companies. The more stars a company has, the lower the complaint ratio.\"\r\n          position=\"right center\"\r\n        />\r\n      </div>\r\n\r\n      {!rating || rating === -1 ? (\r\n        <p style={{ fontSize: '.75rem' }}>\r\n          <strong>Not Available</strong>\r\n        </p>\r\n      ) : (\r\n        <Rating\r\n          icon=\"star\"\r\n          defaultRating={rating}\r\n          maxRating={5}\r\n          size=\"tiny\"\r\n          disabled\r\n        />\r\n      )}\r\n    </Table.Cell>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Header, Table } from 'semantic-ui-react';\r\n\r\nexport default function KwhPriceCell(props) {\r\n  const { sortedState, price, priceLevel } = props;\r\n\r\n  return (\r\n    <Table.Cell\r\n      positive={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'ascending'\r\n      }\r\n      negative={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'descending'\r\n      }\r\n    >\r\n      <Header as=\"h4\" textAlign=\"center\">\r\n        {price.toFixed(1)}¢\r\n      </Header>\r\n    </Table.Cell>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { List, Table } from 'semantic-ui-react';\r\n\r\nexport default function PlanDetailsCell(props) {\r\n  const { name, contractLength, planType, renewablePercent } = props;\r\n\r\n  return (\r\n    <Table.Cell>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Plan Name</List.Header>\r\n          {name}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Contract Length</List.Header>\r\n          {contractLength ? contractLength + ' month' : 'None'}\r\n          {contractLength > 1 ? 's' : ''}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Plan Type</List.Header>\r\n          {planType} Rate\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Renewable Energy</List.Header>\r\n          {renewablePercent}\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Divider, List, Table } from 'semantic-ui-react';\r\n\r\nexport default function PricingCell(props) {\r\n  const { details, eflURL, termsURL } = props;\r\n\r\n  /*TODO: parse details more efficiently\r\n  Currently very hacky when details is a per month cancellation fee or $0.00 */\r\n  const cancelFee = details.slice(details.indexOf('$') + 1, details.length);\r\n\r\n  return (\r\n    <Table.Cell>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Cancellation Fee</List.Header>\r\n          {cancelFee !== '0.00' ? '$' + cancelFee : 'None'}\r\n        </List.Item>\r\n        <Divider hidden />\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={eflURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Facts Sheet (EFL)\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={termsURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Terms of Service\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Accordion, Checkbox, Icon, Table } from 'semantic-ui-react';\r\nimport '../../styles/Plan.css';\r\nimport { FormContext } from '../FormContext';\r\nimport CompanyCell from './modules/CompanyCell';\r\nimport KwhPriceCell from './modules/KwhPriceCell';\r\nimport PlanDetailsCell from './modules/PlanDetailsCell';\r\nimport PricingCell from './modules/PricingCell';\r\n\r\nexport default function Plan(props) {\r\n  const [active, setActive] = useState(0); //Accordion active state (more details)\r\n  const [isChecked, setIsChecked] = useState(false); //Compare checked state\r\n  const { compareList, setCompareList } = useContext(FormContext);\r\n\r\n  // Which column and how it's sorted\r\n  const { sortedState } = props;\r\n\r\n  // All details of current plan\r\n  const {\r\n    plan_id,\r\n    plan_name,\r\n    company_logo,\r\n    rating_total,\r\n    price_kwh500,\r\n    price_kwh1000,\r\n    price_kwh2000,\r\n    pricing_details,\r\n    renewable_energy_description: renewablePercent,\r\n    term_value: contractLength,\r\n    rate_type: planType,\r\n    fact_sheet: eflURL,\r\n    terms_of_service: termsURL\r\n  } = props.plan;\r\n\r\n  // Toggles accordion state\r\n  function handleAccordionClick(e, titleProps) {\r\n    const toggleActive = active === 1 ? 0 : 1;\r\n    setActive(toggleActive);\r\n  }\r\n\r\n  // Either adds or removes comparison click\r\n  function handleCompareClick(e, data) {\r\n    e.preventDefault();\r\n    if (data.checked) {\r\n      setIsChecked(true);\r\n      setCompareList([...compareList, plan_id]);\r\n    } else {\r\n      setIsChecked(false);\r\n      setCompareList(compareList.filter(id => id !== plan_id));\r\n    }\r\n  }\r\n\r\n  // JSX for displaying main content of Plan\r\n  const mainPlan = (\r\n    <Table.Row positive={isChecked}>\r\n      <CompanyCell logo={company_logo} rating={rating_total} />\r\n      <KwhPriceCell\r\n        price={price_kwh500}\r\n        priceLevel={'500'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh1000}\r\n        priceLevel={'1000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh2000}\r\n        priceLevel={'2000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <Table.Cell className=\"checkbox-cell\" textAlign=\"right\" collapsing>\r\n        <Checkbox onChange={handleCompareClick} />\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n\r\n  // Table of details that goes inside accordion\r\n  const moreDetailsTable = (\r\n    <Table className=\"details-table\" unstackable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Plan Details</Table.HeaderCell>\r\n          <Table.HeaderCell>Pricing</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <PlanDetailsCell\r\n            name={plan_name}\r\n            renewablePercent={renewablePercent}\r\n            planType={planType}\r\n            contractLength={contractLength}\r\n          />\r\n          <PricingCell\r\n            details={pricing_details}\r\n            eflURL={eflURL}\r\n            termsURL={termsURL}\r\n          />\r\n        </Table.Row>\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n\r\n  // JSX for displaying plan details that get pushed into accordion\r\n  const moreDetails = (\r\n    <Table.Row positive={isChecked}>\r\n      <Table.Cell\r\n        colSpan=\"12\"\r\n        className=\"accordion-row\"\r\n        style={{ padding: '0', paddingTop: '0' }}\r\n      >\r\n        <Accordion className=\"accordion-cursor\">\r\n          <Accordion.Title\r\n            className={'plan-dropdown' + (active === 1 ? ' hidden' : '')}\r\n            active={active !== 1}\r\n            index={0}\r\n            onClick={handleAccordionClick}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: '.8rem',\r\n                textAlign: 'center',\r\n                marginBottom: '2px'\r\n              }}\r\n            >\r\n              More Details\r\n            </p>\r\n            <Icon className=\"dropdown-icon\" name=\"dropdown\" />\r\n          </Accordion.Title>\r\n          <Accordion.Content active={active === 1}>\r\n            <AnimateHeight\r\n              animateOpacity\r\n              duration={300}\r\n              height={active ? 'auto' : 0}\r\n            >\r\n              {moreDetailsTable}\r\n              <div\r\n                className=\"plan-dropup accordion-cursor\"\r\n                onClick={handleAccordionClick}\r\n              >\r\n                <Icon\r\n                  className=\"dropup-icon\"\r\n                  name=\"dropdown\"\r\n                  onClick={handleAccordionClick}\r\n                />\r\n              </div>\r\n            </AnimateHeight>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {mainPlan}\r\n      {moreDetails}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Loader, Table } from 'semantic-ui-react';\r\nimport '../styles/PlanViewer.css';\r\nimport { FormContext } from './FormContext';\r\nimport Plan from './Plan/Plan';\r\n\r\nexport default function PlanViewer() {\r\n  const { plans, setPlans, isLoading } = useContext(FormContext);\r\n  const [sortedState, setSortState] = useState({\r\n    column: null,\r\n    direction: null\r\n  });\r\n\r\n  // TODO: sorting plans and then searching for new zipcode will break sort\r\n  function handleSort(clickedColumn) {\r\n    // First time column is clicked, sort ascending\r\n    if (sortedState.column !== clickedColumn) {\r\n      setSortState({\r\n        column: clickedColumn,\r\n        direction: 'ascending'\r\n      });\r\n      switch (clickedColumn) {\r\n        case '500':\r\n          setPlans(plans.sort((x, y) => x.price_kwh500 - y.price_kwh500));\r\n          break;\r\n        case '1000':\r\n          setPlans(plans.sort((x, y) => x.price_kwh1000 - y.price_kwh1000));\r\n          break;\r\n        case '2000':\r\n          setPlans(plans.sort((x, y) => x.price_kwh2000 - y.price_kwh2000));\r\n          break;\r\n        default:\r\n      }\r\n      return;\r\n    }\r\n\r\n    // If column is clicked again, reverses order and sets direction state\r\n    setPlans(plans.reverse());\r\n    setSortState({\r\n      column: sortedState.column,\r\n      direction:\r\n        sortedState.direction === 'ascending' ? 'descending' : 'ascending'\r\n    });\r\n  }\r\n\r\n  const plansOutput = plans.slice(0, 20).map(plan => {\r\n    return <Plan key={plan.plan_id} plan={plan} sortedState={sortedState} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"plan-viewer\">\r\n      <Table sortable unstackable>\r\n        <Table.Header>\r\n          <Table.Row disabled={isLoading}>\r\n            <Table.HeaderCell textAlign=\"left\">Company</Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={\r\n                sortedState.column === '500' ? sortedState.direction : null\r\n              }\r\n              onClick={() => handleSort('500')}\r\n              collapsing\r\n              textAlign=\"center\"\r\n            >\r\n              500\r\n              <br />\r\n              <span style={{ fontSize: '.7rem' }}>kWh</span>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={\r\n                sortedState.column === '1000' ? sortedState.direction : null\r\n              }\r\n              onClick={() => handleSort('1000')}\r\n              collapsing\r\n              textAlign=\"center\"\r\n            >\r\n              1000\r\n              <br />\r\n              <span style={{ fontSize: '.7rem' }}>kWh</span>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={\r\n                sortedState.column === '2000' ? sortedState.direction : null\r\n              }\r\n              onClick={() => handleSort('2000')}\r\n              collapsing\r\n              textAlign=\"center\"\r\n            >\r\n              2000\r\n              <br />\r\n              <span style={{ fontSize: '.7rem' }}>kWh</span>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell />\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {isLoading ? (\r\n            <Table.Row>\r\n              <Table.Cell colSpan=\"12\">\r\n                <Loader active={isLoading} inline=\"centered\" />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ) : plansOutput.length ? (\r\n            plansOutput\r\n          ) : (\r\n            <Table.Row>\r\n              <Table.Cell>{'No results found.'}</Table.Cell>\r\n            </Table.Row>\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Divider, Header, Icon } from 'semantic-ui-react';\r\nimport '../styles/Results.css';\r\nimport PlanViewer from './PlanViewer';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Results(props) {\r\n  function goHome() {\r\n    props.history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Divider hidden />\r\n      <div className=\"container-header\">\r\n        <div className=\"header-home\">\r\n          <Icon name=\"home\" size=\"large\" link onClick={goHome} />\r\n        </div>\r\n        <Header className=\"header-results\" as=\"h1\">\r\n          TX Energy Plans\r\n        </Header>\r\n        <div className=\"header-spacer\" />\r\n      </div>\r\n\r\n      <ZipcodeForm />\r\n\r\n      <PlanViewer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport '../styles/App.css';\nimport { FormContext } from './FormContext';\nimport Home from './Home';\nimport Results from './Results';\n\nexport default function App() {\n  const [plans, setPlans] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [compareList, setCompareList] = useState([]);\n\n  function handleZipSubmit(zipcode) {\n    setIsLoading(true);\n    // Regex for 5 digit zip code\n    if (!/^[0-9]{5}$/.test(zipcode)) setPlans([]);\n    else fetchPlans(zipcode);\n  }\n\n  async function fetchPlans(zipcode) {\n    try {\n      const ajax = await fetch(\n        `https://cors-anywhere.herokuapp.com/http://www.powertochoose.org/en-us/service/v1/`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            parameters: {\n              method: 'plans',\n              zip_code: zipcode\n            }\n          })\n        }\n      );\n      let data = await ajax.json();\n      console.dir(data);\n      setPlans(data);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <FormContext.Provider\n        value={{\n          plans,\n          setPlans,\n          isLoading,\n          compareList,\n          setCompareList,\n          handleZipSubmit\n        }}\n      >\n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/app/results\" component={Results} />\n        </main>\n      </FormContext.Provider>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}