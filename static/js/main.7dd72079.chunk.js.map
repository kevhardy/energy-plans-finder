{"version":3,"sources":["components/FormContext.jsx","components/ZipcodeForm.jsx","components/Home.jsx","components/Plan/modules/PlanDetailsCell.jsx","components/Plan/modules/PricingCell.jsx","components/DetailsAccordion.jsx","components/hooks/useWindowWidth.jsx","components/Plan/modules/CompanyCell.jsx","components/Plan/modules/KwhPriceCell.jsx","components/Plan/Plan.jsx","components/PlansTableHeader.jsx","components/PlansTable.jsx","components/Results.jsx","index.jsx","components/App.jsx"],"names":["FormContext","createContext","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","zipcode","setZipcode","_useContext","useContext","isLoading","handleZipSubmit","handleSubmit","e","preventDefault","history","push","concat","useEffect","location","pathname","initialZipcode","queryString","parse","search","react_default","a","createElement","className","Form","onSubmit","Field","name","Input","value","icon","onChange","target","test","maxLength","autoComplete","focus","placeholder","loading","Icon","link","onClick","Home","Divider","hidden","Header","as","components_ZipcodeForm","React","memo","contractLength","planType","renewablePercent","Table","Cell","List","Item","details","eflURL","termsURL","cancelFee","slice","indexOf","length","href","rel","DetailsAccordion","active","setActive","isChecked","_props$plan","plan","planName","plan_name","pricing_details","renewable_energy_description","term_value","rate_type","fact_sheet","terms_of_service","handleAccordionClick","titleProps","moreDetailsTable","unstackable","Row","HeaderCell","Body","modules_PlanDetailsCell","modules_PricingCell","positive","colSpan","style","padding","paddingTop","Accordion","Title","index","fontSize","textAlign","marginBottom","Content","AnimateHeight_default","animateOpacity","duration","height","useWindowWidth","window","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","logo","rating","backgroundImage","alt","margin","Popup","trigger","marginLeft","content","position","Rating","defaultRating","maxRating","size","disabled","sortedState","price","priceLevel","column","direction","negative","toFixed","Plan","setIsChecked","compareList","setCompareList","plan_id","company_logo","rating_total","price_kwh500","price_kwh1000","price_kwh2000","_props$plan2","mainPlan","modules_CompanyCell","Fragment","modules_KwhPriceCell","collapsing","Checkbox","checked","data","console","log","filter","id","handleSort","sorted","PlansTable","plans","setPlans","setSortState","plansOutput","map","Plan_Plan","key","sortable","components_PlansTableHeader","clickedColumn","reverse","sort","x","y","Loader","inline","Results","PlansTable_PlansTable","ReactDOM","render","_useState3","_useState4","setIsLoading","_useState5","_useState6","_fetchPlans","asyncToGenerator","regenerator_default","mark","_callee","ajax","wrap","_context","prev","next","fetch","method","headers","Content-Type","body","JSON","stringify","parameters","zip_code","sent","json","dir","t0","stop","apply","this","arguments","react_router_dom","basename","process","Provider","_x","fetchPlans","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.7dd72079.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const FormContext = createContext({});\r\n","import queryString from 'query-string';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Icon, Input } from 'semantic-ui-react';\r\nimport '../styles/ZipcodeForm.css';\r\nimport { FormContext } from './FormContext';\r\n\r\nfunction ZipcodeForm(props) {\r\n  const [zipcode, setZipcode] = useState('');\r\n  const { isLoading, handleZipSubmit } = useContext(FormContext);\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === '/app/results') {\r\n      const { zipcode: initialZipcode } = queryString.parse(\r\n        props.location.search\r\n      );\r\n\r\n      if (initialZipcode) setZipcode(initialZipcode);\r\n      if (!isLoading) handleZipSubmit(initialZipcode);\r\n    }\r\n  }, []);\r\n\r\n  function handleInputChange(e) {\r\n    const regex = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || regex.test(e.target.value)) {\r\n      setZipcode(e.target.value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.history.push(`/app/results?zipcode=${zipcode}`);\r\n    handleZipSubmit(zipcode);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-zipform\">\r\n      <Form onSubmit={handleSubmit} className=\"zipform\">\r\n        <Form.Field name=\"zipcode\">\r\n          <Input\r\n            name=\"zipcode\"\r\n            value={zipcode}\r\n            icon\r\n            onChange={handleInputChange}\r\n            maxLength=\"5\"\r\n            autoComplete=\"off\"\r\n            focus\r\n            placeholder=\"Enter ZIP Code\"\r\n            loading={isLoading}\r\n          >\r\n            <input />\r\n            <Icon name=\"search\" link onClick={handleSubmit} />\r\n          </Input>\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ZipcodeForm);\r\n","import React from 'react';\r\nimport { Divider, Header } from 'semantic-ui-react';\r\nimport '../styles/Home.css';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home-main\">\r\n      <Divider hidden />\r\n\r\n      <Header className=\"header-main\" as=\"h1\">\r\n        TX Energy Plans\r\n      </Header>\r\n\r\n      <p className=\"header-info\">\r\n        View and compare plans offered in your area. Get started by entering in\r\n        your <strong>ZIP code</strong> down below.\r\n      </p>\r\n\r\n      <Divider hidden />\r\n      <ZipcodeForm />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { List, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function PlanDetailsCell(props) {\r\n  const { name, contractLength, planType, renewablePercent } = props;\r\n\r\n  return (\r\n    <Table.Cell>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Plan Name</List.Header>\r\n          {name}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Contract Length</List.Header>\r\n          {contractLength ? contractLength + ' month' : 'None'}\r\n          {contractLength > 1 ? 's' : ''}\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Plan Type</List.Header>\r\n          {planType} Rate\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>Renewable Energy</List.Header>\r\n          {renewablePercent}\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Divider, List, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function PricingCell(props) {\r\n  const { details, eflURL, termsURL } = props;\r\n\r\n  /*TODO: parse details more efficiently\r\n  Currently very hacky when details is a per month cancellation fee or $0.00 */\r\n  const cancelFee = details.slice(details.indexOf('$') + 1, details.length);\r\n\r\n  return (\r\n    <Table.Cell>\r\n      <List>\r\n        <List.Item>\r\n          <List.Header>Cancellation Fee</List.Header>\r\n          {cancelFee !== '0.00' ? '$' + cancelFee : 'None'}\r\n        </List.Item>\r\n        <Divider hidden />\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={eflURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Facts Sheet (EFL)\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n        <List.Item>\r\n          <List.Header>\r\n            <a href={termsURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Terms of Service\r\n            </a>\r\n          </List.Header>\r\n        </List.Item>\r\n      </List>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Accordion, Icon, Table } from 'semantic-ui-react';\r\nimport PlanDetailsCell from './Plan/modules/PlanDetailsCell';\r\nimport PricingCell from './Plan/modules/PricingCell';\r\n\r\nexport default function DetailsAccordion(props) {\r\n  const [active, setActive] = useState(0);\r\n  const { isChecked } = props;\r\n\r\n  const {\r\n    plan_name: planName,\r\n    pricing_details: details,\r\n    renewable_energy_description: renewablePercent,\r\n    term_value: contractLength,\r\n    rate_type: planType,\r\n    fact_sheet: eflURL,\r\n    terms_of_service: termsURL\r\n  } = props.plan;\r\n\r\n  // Toggles accordion state\r\n  function handleAccordionClick(e, titleProps) {\r\n    const toggleActive = active === 1 ? 0 : 1;\r\n    setActive(toggleActive);\r\n  }\r\n\r\n  // Table of details that goes inside accordion\r\n  const moreDetailsTable = (\r\n    <Table className=\"details-table\" unstackable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Plan Details</Table.HeaderCell>\r\n          <Table.HeaderCell>Pricing</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <PlanDetailsCell\r\n            name={planName}\r\n            renewablePercent={renewablePercent}\r\n            planType={planType}\r\n            contractLength={contractLength}\r\n          />\r\n          <PricingCell details={details} eflURL={eflURL} termsURL={termsURL} />\r\n        </Table.Row>\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n\r\n  return (\r\n    <Table.Row positive={isChecked}>\r\n      <Table.Cell\r\n        colSpan=\"12\"\r\n        className=\"accordion-row\"\r\n        style={{ padding: '0', paddingTop: '0' }}\r\n      >\r\n        <Accordion className=\"accordion-cursor\">\r\n          <Accordion.Title\r\n            className={'plan-dropdown' + (active === 1 ? ' hidden' : '')}\r\n            active={active !== 1}\r\n            index={0}\r\n            onClick={handleAccordionClick}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: '.8rem',\r\n                textAlign: 'center',\r\n                marginBottom: '2px'\r\n              }}\r\n            >\r\n              More Details\r\n            </p>\r\n            <Icon className=\"dropdown-icon\" name=\"dropdown\" />\r\n          </Accordion.Title>\r\n          <Accordion.Content active={active === 1}>\r\n            <AnimateHeight\r\n              animateOpacity\r\n              duration={300}\r\n              height={active ? 'auto' : 0}\r\n            >\r\n              {moreDetailsTable}\r\n              <div\r\n                className=\"plan-dropup accordion-cursor\"\r\n                onClick={handleAccordionClick}\r\n              >\r\n                <Icon\r\n                  className=\"dropup-icon\"\r\n                  name=\"dropdown\"\r\n                  onClick={handleAccordionClick}\r\n                />\r\n              </div>\r\n            </AnimateHeight>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowWidth() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  });\r\n\r\n  return width;\r\n}\r\n","import React from 'react';\r\nimport { Icon, Popup, Rating, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function CompanyCell(props) {\r\n  const { logo, rating } = props;\r\n\r\n  return (\r\n    <Table.Cell className=\"company-cell\">\r\n      <div\r\n        style={{ backgroundImage: 'url(' + logo + ')' }}\r\n        className=\"company-logo\"\r\n        alt=\"Company's logo\"\r\n      />\r\n      <div style={{ margin: '1rem 0 0' }}>\r\n        Rating{' '}\r\n        <Popup\r\n          trigger={\r\n            <Icon\r\n              style={{ marginLeft: '.85rem' }}\r\n              name=\"question circle outline\"\r\n            />\r\n          }\r\n          content=\"The Company Rating is based on the ratio of customer complaints a company has received in the past 6 months compared to other companies. The more stars a company has, the lower the complaint ratio.\"\r\n          position=\"right center\"\r\n        />\r\n      </div>\r\n\r\n      {!rating || rating === -1 ? (\r\n        <p style={{ fontSize: '.75rem' }}>\r\n          <strong>Not Available</strong>\r\n        </p>\r\n      ) : (\r\n        <Rating\r\n          icon=\"star\"\r\n          defaultRating={rating}\r\n          maxRating={5}\r\n          size=\"tiny\"\r\n          disabled\r\n        />\r\n      )}\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Header, Table } from 'semantic-ui-react';\r\n\r\nexport default React.memo(function KwhPriceCell(props) {\r\n  const { sortedState, price, priceLevel } = props;\r\n\r\n  return (\r\n    <Table.Cell\r\n      positive={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'ascending'\r\n      }\r\n      negative={\r\n        sortedState.column === priceLevel &&\r\n        sortedState.direction === 'descending'\r\n      }\r\n    >\r\n      <Header as=\"h4\" textAlign=\"center\">\r\n        {price.toFixed(1)}¢\r\n      </Header>\r\n    </Table.Cell>\r\n  );\r\n});\r\n","import React, { useContext, useState } from 'react';\r\nimport { Checkbox, Table } from 'semantic-ui-react';\r\nimport '../../styles/Plan.css';\r\nimport DetailsAccordion from '../DetailsAccordion';\r\nimport { FormContext } from '../FormContext';\r\nimport useWindowWidth from '../hooks/useWindowWidth';\r\nimport CompanyCell from './modules/CompanyCell';\r\nimport KwhPriceCell from './modules/KwhPriceCell';\r\nimport PlanDetailsCell from './modules/PlanDetailsCell';\r\nimport PricingCell from './modules/PricingCell';\r\n\r\nexport default function Plan(props) {\r\n  //Accordion active state (more details)\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const { compareList, setCompareList } = useContext(FormContext);\r\n  const width = useWindowWidth();\r\n\r\n  // Which column and how it's sorted\r\n  const { sortedState } = props;\r\n\r\n  // Details of plan for main content\r\n  const {\r\n    plan_id,\r\n    company_logo,\r\n    rating_total,\r\n    price_kwh500,\r\n    price_kwh1000,\r\n    price_kwh2000\r\n  } = props.plan;\r\n\r\n  // Details for accordion\r\n  const {\r\n    plan_name: planName,\r\n    pricing_details: details,\r\n    renewable_energy_description: renewablePercent,\r\n    term_value: contractLength,\r\n    rate_type: planType,\r\n    fact_sheet: eflURL,\r\n    terms_of_service: termsURL\r\n  } = props.plan;\r\n\r\n  // Either adds or removes comparison click\r\n  // very slow, needs optimizing\r\n  function handleCompareClick(e, data) {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    if (data.checked) {\r\n      setIsChecked(true);\r\n      setCompareList(compareList.concat([plan_id]));\r\n    } else {\r\n      setIsChecked(false);\r\n      setCompareList(compareList.filter(id => id !== plan_id));\r\n    }\r\n  }\r\n\r\n  // JSX for displaying main content of Plan\r\n  const mainPlan = (\r\n    <Table.Row positive={isChecked}>\r\n      <CompanyCell logo={company_logo} rating={rating_total} />\r\n\r\n      {width >= 768 && (\r\n        <React.Fragment>\r\n          <PlanDetailsCell\r\n            name={planName}\r\n            renewablePercent={renewablePercent}\r\n            planType={planType}\r\n            contractLength={contractLength}\r\n          />\r\n          <PricingCell details={details} eflURL={eflURL} termsURL={termsURL} />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <KwhPriceCell\r\n        price={price_kwh500}\r\n        priceLevel={'500'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh1000}\r\n        priceLevel={'1000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <KwhPriceCell\r\n        price={price_kwh2000}\r\n        priceLevel={'2000'}\r\n        sortedState={sortedState}\r\n      />\r\n      <Table.Cell className=\"checkbox-cell\" textAlign=\"right\" collapsing>\r\n        <Checkbox\r\n          name=\"isChecked\"\r\n          checked={isChecked}\r\n          onChange={handleCompareClick}\r\n        />\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {mainPlan}\r\n      {width < 768 && (\r\n        <DetailsAccordion plan={props.plan} isChecked={isChecked} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport useWindowWidth from './hooks/useWindowWidth';\r\n\r\nexport default React.memo(function PlansTableHeader(props) {\r\n  const { isLoading, sortedState, handleSort } = props;\r\n  const width = useWindowWidth();\r\n\r\n  return (\r\n    <Table.Header>\r\n      <Table.Row disabled={isLoading}>\r\n        <Table.HeaderCell textAlign=\"left\">Company</Table.HeaderCell>\r\n\r\n        {width >= 768 && (\r\n          <React.Fragment>\r\n            <Table.HeaderCell textAlign=\"center\">Plan Details</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Pricing</Table.HeaderCell>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '500' ? sortedState.direction : null}\r\n          onClick={() => handleSort('500')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          500 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '1000' ? sortedState.direction : null}\r\n          onClick={() => handleSort('1000')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          1000 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={sortedState.column === '2000' ? sortedState.direction : null}\r\n          onClick={() => handleSort('2000')}\r\n          collapsing\r\n          textAlign=\"center\"\r\n        >\r\n          2000 <br />\r\n          <span className=\"kwh-header\">kWh</span>\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell className=\"checkbox-headerCell\" />\r\n      </Table.Row>\r\n    </Table.Header>\r\n  );\r\n});\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Loader, Table } from 'semantic-ui-react';\r\nimport '../styles/PlansTable.css';\r\nimport { FormContext } from './FormContext';\r\nimport Plan from './Plan/Plan';\r\nimport PlansTableHeader from './PlansTableHeader';\r\n\r\nexport default function PlansTable() {\r\n  const { plans, setPlans, isLoading } = useContext(FormContext);\r\n  const [sortedState, setSortState] = useState({\r\n    column: null,\r\n    direction: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      setSortState({\r\n        column: null,\r\n        direction: null\r\n      });\r\n    }\r\n  });\r\n\r\n  function handleSort(clickedColumn) {\r\n    // First time column is clicked, sort ascending\r\n    if (sortedState.column !== clickedColumn) {\r\n      setSortState({\r\n        column: clickedColumn,\r\n        direction: 'ascending'\r\n      });\r\n      switch (clickedColumn) {\r\n        case '500':\r\n          setPlans(plans.sort((x, y) => x.price_kwh500 - y.price_kwh500));\r\n          break;\r\n        case '1000':\r\n          setPlans(plans.sort((x, y) => x.price_kwh1000 - y.price_kwh1000));\r\n          break;\r\n        case '2000':\r\n          setPlans(plans.sort((x, y) => x.price_kwh2000 - y.price_kwh2000));\r\n          break;\r\n        default:\r\n      }\r\n      return;\r\n    }\r\n\r\n    // If column is clicked again, reverses order and sets direction state\r\n    setPlans(plans.reverse());\r\n    setSortState({\r\n      column: sortedState.column,\r\n      direction:\r\n        sortedState.direction === 'ascending' ? 'descending' : 'ascending'\r\n    });\r\n  }\r\n\r\n  const plansOutput = plans.slice(0, 10).map(plan => {\r\n    return <Plan key={plan.plan_id} plan={plan} sortedState={sortedState} />;\r\n  });\r\n\r\n  return (\r\n    <Table className=\"plan-table\" sortable unstackable>\r\n      <PlansTableHeader\r\n        sortedState={sortedState}\r\n        isLoading={isLoading}\r\n        handleSort={handleSort}\r\n      />\r\n      <Table.Body>\r\n        {isLoading ? (\r\n          <Table.Row>\r\n            <Table.Cell colSpan=\"12\">\r\n              <Loader active={isLoading} inline=\"centered\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        ) : plans.length ? (\r\n          plansOutput\r\n        ) : (\r\n          <Table.Row>\r\n            <Table.Cell colSpan=\"12\">No results found.</Table.Cell>\r\n          </Table.Row>\r\n        )}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Divider, Header, Icon } from 'semantic-ui-react';\r\nimport '../styles/Results.css';\r\nimport PlansTable from './PlansTable';\r\nimport ZipcodeForm from './ZipcodeForm';\r\n\r\nexport default function Results(props) {\r\n  function goHome() {\r\n    props.history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Divider hidden />\r\n      <div className=\"container-header\">\r\n        <div className=\"header-home\">\r\n          <Icon name=\"home\" size=\"large\" link onClick={goHome} />\r\n        </div>\r\n        <Header className=\"header-results\" as=\"h1\">\r\n          TX Energy Plans\r\n        </Header>\r\n        <div className=\"header-spacer\" />\r\n      </div>\r\n\r\n      <ZipcodeForm />\r\n\r\n      <PlansTable />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport '../styles/App.css';\nimport { FormContext } from './FormContext';\nimport Home from './Home';\nimport Results from './Results';\n\nexport default function App() {\n  const [plans, setPlans] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [compareList, setCompareList] = useState([]);\n\n  function handleZipSubmit(zipcode) {\n    setIsLoading(true);\n    // Regex for 5 digit zip code\n    if (!/^[0-9]{5}$/.test(zipcode)) setPlans([]);\n    else fetchPlans(zipcode);\n  }\n\n  async function fetchPlans(zipcode) {\n    try {\n      const ajax = await fetch(\n        `https://cors-anywhere.herokuapp.com/http://www.powertochoose.org/en-us/service/v1/`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            parameters: {\n              method: 'plans',\n              zip_code: zipcode\n            }\n          })\n        }\n      );\n      let data = await ajax.json();\n      console.dir(data);\n      console.dir(data.map(plan => plan.plan_id).sort());\n      setPlans(data);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <FormContext.Provider\n        value={{\n          plans,\n          setPlans,\n          isLoading,\n          compareList,\n          setCompareList,\n          handleZipSubmit\n        }}\n      >\n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/app/results\" component={Results} />\n        </main>\n      </FormContext.Provider>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}